<project name="Build specific targets and properties" default="noDefault">

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- Add on <ant> task for each top level element being built. -->
	<!-- ===================================================================== -->
	<available property="allElementsFile" file="${builder}/allElements.xml" value="${builder}/allElements.xml"/>
	<property name="allElementsFile" location="${eclipse.pdebuild.templates}/headless-build/allElements.xml"/>

	<import file="${allElementsFile}" />
	<target name="allElements">
		<antcall target="allElementsDelegator" />
	</target>

	<!-- ===================================================================== -->
	<!-- ===================================================================== -->
	<target name="getBaseComponents" depends="checkLocalBase" unless="skipBase">
		<get src="${eclipseBaseURL}" dest="${buildDirectory}/../temp-base.zip" />
		<unzip dest="${base}" overwrite="true" src="${buildDirectory}/../temp-base.zip" />
	</target>

	<target name="checkLocalBase">
		<available file="${base}" property="skipBase" />
	</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for mapsCheckoutTag as desired. -->
	<!-- ===================================================================== -->
	<target name="getMapFiles" depends="checkLocalMaps" unless="skipMaps">
		<property name="mapsCheckoutTag" value="HEAD" />
		<cvs cvsRoot="${mapsRepo}" package="${mapsRoot}" dest="${buildDirectory}/maps" tag="${mapsCheckoutTag}" />
	</target>

	<target name="checkLocalMaps">
		<available property="skipMaps" file="${buildDirectory}/maps" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<cvs dest="${buildDirectory}/maps/${mapsRoot}" command="tag ${mapsTagTag}" />
	</target>

	<!-- ===================================================================== -->

	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>

	<target name="gatherLogs">
		<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>
		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features">
				<include name="**/*.log.zip" />
			</fileset>
		</unzip>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<antcall target="copySources" />
	</target>

	<target name="copySources">
		<!-- Copy feature and plug-in sources -->
		<mkdir dir="${buildDirectory}/features" />
		<copy todir="${buildDirectory}/features/org.eventb.smt.feature">
			<fileset dir="${builder}/../../org.eventb.smt-feature" />
		</copy>

		<mkdir dir="${buildDirectory}/plugins" />
		<copy todir="${buildDirectory}/plugins/org.eventb.smt">
			<fileset dir="${builder}/../../org.eventb.smt" />
		</copy>

		<mkdir dir="${buildDirectory}/plugins" />
		<copy todir="${buildDirectory}/plugins/org.eventb.smt.core">
			<fileset dir="${builder}/../../org.eventb.smt.core" />
		</copy>

		<mkdir dir="${buildDirectory}/plugins" />
		<copy todir="${buildDirectory}/plugins/org.eventb.smt.ui">
			<fileset dir="${builder}/../../org.eventb.smt.ui" />
		</copy>

		<mkdir dir="${buildDirectory}/plugins" />
		<copy todir="${buildDirectory}/plugins/org.eventb.smt.help">
			<fileset dir="${builder}/../../org.eventb.smt.help" />
		</copy>

		<mkdir dir="${buildDirectory}/plugins" />
		<copy todir="${buildDirectory}/plugins/org.eventb.smt.verit">
			<fileset dir="${builder}/../../org.eventb.smt.verit" />
		</copy>

		<mkdir dir="${buildDirectory}/plugins" />
		<copy todir="${buildDirectory}/plugins/org.eventb.smt.verit.linux">
			<fileset dir="${builder}/../../org.eventb.smt.verit.linux" />
		</copy>

		<mkdir dir="${buildDirectory}/plugins" />
		<copy todir="${buildDirectory}/plugins/org.eventb.smt.verit.macosx">
			<fileset dir="${builder}/../../org.eventb.smt.verit.macosx" />
		</copy>

		<mkdir dir="${buildDirectory}/plugins" />
		<copy todir="${buildDirectory}/plugins/org.eventb.smt.verit.win32">
			<fileset dir="${builder}/../../org.eventb.smt.verit.win32" />
		</copy>

		<mkdir dir="${buildDirectory}/plugins" />
		<copy todir="${buildDirectory}/plugins/org.eventb.smt.cvc3">
			<fileset dir="${builder}/../../org.eventb.smt.cvc3" />
		</copy>

		<mkdir dir="${buildDirectory}/plugins" />
		<copy todir="${buildDirectory}/plugins/org.eventb.smt.cvc3.linux">
			<fileset dir="${builder}/../../org.eventb.smt.cvc3.linux" />
		</copy>

		<mkdir dir="${buildDirectory}/plugins" />
		<copy todir="${buildDirectory}/plugins/org.eventb.smt.cvc3.macosx">
			<fileset dir="${builder}/../../org.eventb.smt.cvc3.macosx" />
		</copy>

		<mkdir dir="${buildDirectory}/plugins" />
		<copy todir="${buildDirectory}/plugins/org.eventb.smt.cvc3.win32">
			<fileset dir="${builder}/../../org.eventb.smt.cvc3.win32" />
		</copy>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="postFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the repositories are being processed -->
	<!-- ===================================================================== -->
	<target name="preProcessRepos">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the repositories have been processed -->
	<!-- ===================================================================== -->
	<target name="postProcessRepos">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running assemble. -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running assemble. -->
	<!-- ===================================================================== -->
	<target name="postAssemble">
		<antcall target="makeP2RepoArchive" />
	</target>

	<target name="makeP2RepoArchive">
		<property name="buildRepo" value="${buildDirectory}/buildRepo" />

		<!-- Fix the repository name generated by PDE -->
		<replaceregexp match="file:/.*/buildRepo" replace="${p2.repo.name}">
			<fileset dir="${buildRepo}" includes="*.xml" />
		</replaceregexp>

		<delete file="${p2.repo.archive.path}" quiet="true" />
		<zip destfile="${p2.repo.archive.path}" baseDir="${buildRepo}"
				whenempty= "fail" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running package. -->
	<!-- ===================================================================== -->
	<target name="prePackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running package. -->
	<!-- ===================================================================== -->
	<target name="postPackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the build is done. -->
	<!-- ===================================================================== -->
	<target name="postBuild">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to test the build results -->
	<!-- ===================================================================== -->
	<target name="test">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to publish the build results -->
	<!-- ===================================================================== -->
	<target name="publish">
	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
